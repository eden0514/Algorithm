//LIS => 배열의 연속되지 않는 부분 배열 중 모든 요소가 엄격하게 오름차순으로 정렬된 가장 긴 부분배열을 의미
const LIS = function (arr) {
  const N = arr.length;
  // lis[i]는 i에서 끝나는 LIS의 길이를 저장
  // 최소한 각 요소 하나로 LIS를 만들 수 있으므로 1로 초기화한다.
  const lis = Array(N).fill(1);// [1,1,1,1,1] arr[j+1] arr[j]
  for (let i = 1; i < N; i++) {
    // i에서 끝나는 LIS의 길이
    for (let j = 0; j < i; j++) {
      // i 이전의 인덱스만 검사하면 된다.
      // i는 1부터 시작하므로, 짧은 길이부터 검사한다. (bottom-up 방식)     
      if (arr[i] > arr[j] && lis[i] < lis[j] + 1) { //10 > 3 && 1 < 1+1 [1,2,1,1,3]
        lis[i] = lis[j] + 1;
      }
    }
  }
  return Math.max(...lis);
};
//O(N^2)이면 이중for문 같은 건데..
//[3, 10, 2, 1, 20]
/**
 * [1,1,1,1,1]
 * [1,2,1,1,1]
 * i=2
 * j=0
 * j=1
 * j=2
 * i=3
 * j=0,1,2,3
 * i=4
 * j=0
 * [1,2,1,1,2]
 * j=1
 * [1,2,1,1,3]
 * j=2
 * lis = [1,2,1,1,3] 제일 큰 값을 리턴
 */
